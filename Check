def is_valid_move(board, row, col, num):
    # 检查同一行是否有重复数字
    if num in board[row]:
        raise ValueError("该数字在同一行已经存在")

    # 检查同一列是否有重复数字
    if num in [board[i][col] for i in range(9)]:
        raise ValueError("该数字在同一列已经存在")

    # 检查同一3x3宫格是否有重复数字
    start_row, start_col = 3 * (row // 3), 3 * (col // 3)
    for i in range(start_row, start_row + 3):
        for j in range(start_col, start_col + 3):
            if board[i][j] == num:
                raise ValueError("该数字在同一3x3宫格已经存在")

    return True

def solve_sudoku(board):
    for row in range(9):
        for col in range(9):
            if board[row][col] == 0:
                for num in range(1, 10):
                    try:
                        if is_valid_move(board, row, col, num):
                            board[row][col] = num
                            if solve_sudoku(board):
                                return True
                            board[row][col] = 0  # 回溯
                    except ValueError as e:
                        print(f"错误：{e}")
                        return False

    return True  # 所有空格都已填满

if __name__ == "__main__":
    # 输入数独题目
    sudoku = [
        
    ]

    if solve_sudoku(sudoku):
        print("Sudoku is solvable:")
        for row in sudoku:
            print(row)
    else:
        print("Sudoku is not solvable.")
